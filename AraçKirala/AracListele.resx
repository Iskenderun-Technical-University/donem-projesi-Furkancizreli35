<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuncelle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        5gAAAOYBIly6UQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASVSURBVFhHrZd/
        TNR1GMePfv2TTdxEIEqdAgmHSJxmx/HjQFRAJG6ACEaxUY5RCluCSbOuOYFKRamRRGlmw2ZDicpiNh2Q
        a5q1lVOmCG39VYRjbWIrB6+ez/llnsfdl++J7+3+ufs8n+e15/O8n8/nTHejrKOEPNNBUm4nmY6vycj/
        lqSi7wjWfr73cjq5L+Mw9sw2Gtd8xm9rP4ecY5D7BTi+hLwTUNAF604yWHiaxqIeUkwQoIVPT+kfkJ5+
        gJ9WfQwCgUAgEOhAsP4UFHVz4dke1mjb+K/EZmbZm+lM3Q8rWmHlAbgLCDZ8T0fpaQK1bY3JuofwpL1c
        Sn4XBIJpQ/RypeQHorTt9WV7iyes73DNtgcEgikg/haIy4Ygehh+rpdILY13JdYz66k6Lj/dAALBFBCj
        GYew5rQRLBAXDVaiT/c4ljrpXLYDBAIDEOOrD1Ku4vyBKO7luCuZp+JqWRn/OlicoAeR0syZ1BaK0z5k
        XsFR7tfC/YIo6SZNC9MkPo99lZ/jXgMdiOHEfTi0CJOlhQftrTw24ffsQ4RlHqHfYGOev2NOxGzBvrgG
        BAIfEMO2BsxqbfI+IlLe46BUYtS+nzL1XZokl57o1xpzIPsI+QIxqgdR3E2yinXJXEWj+RXwBbG8jiy1
        zvo22VKJ69px3EhtJiXtfcLSW+mfcMfqw+SptVKJjXqVKDrFbrXOpUWbGYyuAh8QX6k1ljoWSSVuePTE
        dWnMQQ93/L7qE+aoEuv1ROFJBlzJ51cQEvkSCATeIAQgV61buoPjBt2BuGOvipHj2KTXE44uAV1Yhi2i
        HHxAjMc5CTQ7mSEg//lh0T8UQNanLNadmN9gNS14gayFL4IPiCG1Ufx2LEYs6g5hb2F2zkc8oje280+Q
        aZpXStaCMvABcU0BxNYSP4VFJ0EoAOmFh93G9iQI9Z4wzX0e2/xS8AExFld16wjkOG4ahRCL/qnApRKx
        E+7wBiFVsJokecjcEvAFYa4kx1WFGtq9WdQrRBONKkbmRKWbOyZBOI5JEyo9voFBHYgutSaqmgjpiREP
        iD6BuOkBMZTURJCarnIcFzws6g5x1ZVcKayQRoHAB8R45MtyViKZmNVuFj1r2cpMy5sUCMSYBjGUsItl
        am3iXiq8WXQCIqPNbRCFFJASth50IP6KqqRQemJEuSOmhrPKnipWKvGGVGJE5kSTZSeh6jt5U6RKJf7x
        YVEXhEzMJLVWEwGPFnB+CoiJxjynGlNF2Z08YKlVSW9fLMvr2SiVGNWzqECcm/RoDc5nhUAwFUTUZnrN
        FczQwkzikIeWbCPyye2USyV+NWJRuTvsWvidCs2jw1+ImK3sNOyOWxZtdyXzpsBcAkPy6PMHwryFtdKY
        Y3oQCbchLqW3MFNL512zHUQKxLARCOmJX6Qn/vW8wHxADKu3hJZGX0E5hAvERYMQnhfYZIh6rljlOte2
        NyZ1HEZ7Qg9CHrrtloYpyq6nOfkkCMQZvyG28eOSWlK1baYrAkLXkRxWxG6BGNBpzKvRleyKrlZD5h79
        OfUmmZxB2i2aIQ8a9bGFb5L577dMpv8BKPTALEkMrQIAAAAASUVORK5CYII=
</value>
  </data>
</root>